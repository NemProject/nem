<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.nem.nis</groupId>
	<artifactId>nem-infrastructure-server</artifactId>
	<version>0.4.12-BETA</version>
	<name>NEM Infrastructure Server</name>
	<organization>
		<name>NEM - New Economy Movement</name>
		<url>http://www.ournem.com</url>
	</organization>
	<repositories>
		<repository>
			<id>hibernate-repo</id>
			<name>SpringSource OSGi Bundle External</name>
			<url>https://repository.jboss.org/nexus/content/repositories/central/</url>
		</repository>
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>
	</repositories>

	<properties>
		<nem-certificate-store>identity.jks</nem-certificate-store>
		<nem-certificate-password>nem-start-201404</nem-certificate-password>
		<nem-code-base>http://bob.nem.ninja/webstart</nem-code-base>
		<proGuard>..\..\proguard5.0beta2</proGuard>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- http://central.maven.org/maven2/org/eclipse/jetty/jetty-maven-plugin/ -->
		<jetty.version>9.1.3.v20140225</jetty.version>
		<!-- http://repo.springsource.org/release/org/springframework/spring/ -->
		<spring.version>4.0.0.RELEASE</spring.version>
		<spring.security.version>3.2.0.RELEASE</spring.security.version>
		<hibernate.version>4.3.0.Final</hibernate.version>
		<hibernate.validator.version>5.0.2.Final</hibernate.validator.version>
	</properties>

	<dependencies>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<!-- jetty -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-client</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlets</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-plus</artifactId>
			<version>${jetty.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-annotations</artifactId>
			<version>${jetty.version}</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.175</version>
		</dependency>

		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.9</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.2</version>
		</dependency>

		<dependency>
     		<groupId>com.googlecode.javaewah</groupId>
     		<artifactId>JavaEWAH</artifactId>
     		<version>0.8.6</version>
     	</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.50</version>
		</dependency>

		<dependency>
			<groupId>javax.jnlp</groupId>
			<artifactId>jnlp-api</artifactId>
			<version>7.0</version>
			<scope>system</scope>
			<systemPath>${java.home}/lib/javaws.jar</systemPath>
		</dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>

		<!-- actually we don't need flyway-maven, flyway-core will be enough <dependency> 
			<groupId>com.googlecode.flyway</groupId> <artifactId>flyway-maven-plugin</artifactId> 
			<version>2.3</version> </dependency> -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>3.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpasyncclient</artifactId>
			<version>4.0.2</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.matrix-toolkits-java</groupId>
			<artifactId>mtj</artifactId>
			<version>1.0.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-graph-impl</artifactId>
			<version>2.0.1</version>
            <scope>test_integration</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-algorithms</artifactId>
			<version>2.0.1</version>
            <scope>test_integration</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-visualization</artifactId>
			<version>2.0.1</version>
            <scope>test_integration</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.jung</groupId>
			<artifactId>jung-api</artifactId>
			<version>2.0.1</version>
            <scope>test_integration</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<jettyXml>jetty.xml</jettyXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.nem.core.deploy.CommonStarter</mainClass>
					<arguments>
					</arguments>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> 
				<version>2.4</version> <executions> <execution> <id>nem-core</id> <phase>package</phase> 
				<goals> <goal>jar</goal> </goals> <configuration> <classifier>lib</classifier> 
				<includes> <include>org/nem/core/crypto/*</include> <include>org/nem/core/messages/*</include> 
				<include>org/nem/core/model/*</include> <include>org/nem/core/serialization/*</include> 
				<include>org/nem/core/time/*</include> <include>org/nem/core/transactions/*</include> 
				<include>org/nem/core/utils/*</include> </includes> </configuration> </execution> 
				</executions> <configuration> <archive> <manifest> <addClasspath>true</addClasspath> 
				<mainClass>org.nem.core.deploy.CommonStarter</mainClass> </manifest> </archive> 
				</configuration> </plugin> -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<haltOnFailure>false</haltOnFailure>
					<rules>
						<rule>
							<element>BUNDLE</element>
							<limits>
								<limit>
									<counter>COMPLEXITY</counter>
									<value>COVEREDRATIO</value>
									<minimum>0.60</minimum>
								</limit>
							</limits>
						</rule>
					</rules>
				</configuration>

			</plugin>

			<!-- this adds test_integration, so that during test-compile phase they 
				will be compiled, unfortunatelly, we can't specify target dir :/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/test_integration/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.16</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.16</version>
				<configuration>
					<testSourceDirectory>src/integrationtest/java</testSourceDirectory>
					<failIfNoTests>true</failIfNoTests>
				</configuration>
				<executions>
					<execution>
						<id>default-integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Permissions>all-permissions</Permissions>
							<Codebase>${nem-code-base}</Codebase>
							<Application-Name>${project.name}</Application-Name>
							<Trusted-Only>true</Trusted-Only>
							<Implementation-Build>${project.version}</Implementation-Build>
							<Implementation-Vendor>NEM - New Economy Movement</Implementation-Vendor>
						</manifestEntries>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/obfuscationLibs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>webstart-maven-plugin</artifactId>
				<version>1.0-beta-6</version>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>keytool-api-1.7</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>jnlp</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludeTransitive>false</excludeTransitive>
					<jnlp>
						<inputTemplate>nem-server.vm</inputTemplate>
						<outputFile>nem-server.jnlp</outputFile>
						<mainClass>org.nem.core.deploy.CommonStarter</mainClass>
						<allPermissions />
					</jnlp>
					<libPath>serverjars</libPath>
					<resourcesDirectory>${project.basedir}/src/main/site</resourcesDirectory>
					<workDirectory>${project.basedir}/site</workDirectory>
					<dependencies>
						<excludes />
					</dependencies>
					<updateManifestEntries>
						<Permissions>all-permissions</Permissions>
						<Codebase>${nem-code-base}</Codebase>
						<Application-Name>${project.name}</Application-Name>
					</updateManifestEntries>
					<unsignAlreadySignedJars>true</unsignAlreadySignedJars>
					<sign>
						<keystore>${nem-certificate-store}</keystore>
						<alias>nem-cert</alias>
						<storepass>${nem-certificate-password}</storepass>
						<keypass>${nem-certificate-password}</keypass>
						<verify>true</verify>
					</sign>
					<gzip>true</gzip>
					<outputJarVersions>true</outputJarVersions>
					<verbose>true</verbose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.googlecode.velocity-maven-plugin</groupId>
				<artifactId>velocity-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<templateValues>
						<userName>${user.name}</userName>
						<organizationName>${project.organization.name}</organizationName>
						<nem-code-base>${nem-code-base}</nem-code-base>
						<javaHome>${java.home}</javaHome>
						<proGuard>${proGuard}</proGuard>
					</templateValues>
				</configuration>
				<executions>
					<!-- ************************************************** -->
					<!-- Generate Windows Start Script NCC -->
					<!-- ************************************************** -->
					<execution>
						<id>windows-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>run-nis.*</include>
								</includes>
							</templateFiles>
							<outputDirectory>site</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- ************************************************** -->
						<!-- Generate obfuscation script (proguard jar path) -->
						<!-- ************************************************** -->
						<id>windows-obfuscation-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>obfuscate-ws.bat</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- ************************************************** -->
						<!-- Generate Windows Obfuscation signing Script -->
						<!-- ************************************************** -->
						<id>windows-signing-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>buildPackage-ws-sign-nis.bat</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- ************************************************** -->
						<!-- Generate obfuscation script (proguard jar path) -->
						<!-- ************************************************** -->
						<id>linux-obfuscation-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>obfuscate-ws.sh</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- ************************************************** -->
						<!-- Generate Windows Obfuscation signing Script -->
						<!-- ************************************************** -->
						<id>linux-signing-script</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>buildPackage-ws-sign-nis.sh</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<!-- ************************************************** -->
						<!-- Generate MANIFEST.MF for re-includion in JAR -->
						<!-- ************************************************** -->
						<id>manifest-mf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>MANIFEST.MF</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation/META-INF</outputDirectory>
							<removeExtension>true</removeExtension>
						</configuration>
					</execution>
					<execution>
						<!-- ************************************************** -->
						<!-- Generate ProGuard settings for nem-infrastructure-server -->
						<!-- ************************************************** -->
						<id>proGuard-settings-nem-infrastructure-serve</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>velocity</goal>
						</goals>
						<configuration>
							<templateFiles>
								<directory>src/main/templates</directory>
								<includes>
									<include>nis-ws.new.settings</include>
								</includes>
							</templateFiles>
							<outputDirectory>obfuscation</outputDirectory>
							<removeExtension>true</removeExtension>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<!-- ************************************************** -->
			<!-- List the license information of all dependencies -->
			<!-- ************************************************** -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>

		</plugins>
	</build>
</project>
